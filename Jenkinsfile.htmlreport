pipeline {
    agent any  // Ejecutar en cualquier agente de Jenkins

    environment {
        PYTHONUNBUFFERED = '1'
        GEMINI_API_KEY = credentials('GEMINI_API_KEY')  // Cargar clave segura de la API
    }

    stages {
        stage('Clonar repo') {  // Obtener el código del repositorio
            steps {
                git 'https://github.com/ChristopherPalloArias/JenkinsExample.git'
            }
        }

        stage('Crear entorno y dependencias') {  // Preparar entorno virtual e instalar requirements
            steps {
                sh '''
                    python3 -m venv venv
                    ./venv/bin/pip install --upgrade pip
                    ./venv/bin/pip install -r requirements.txt
                '''
            }
        }

        stage('Levantar API FastAPI') {  // Iniciar el servidor de la API
            steps {
                sh '''
                    cd backend
                    nohup ../venv/bin/uvicorn main:app --host 127.0.0.1 --port 8000 &
                    sleep 5  # Espera a que arranque
                    for i in {1..15}; do  # Verifica que esté arriba
                        echo "⌛ Esperando que la API esté lista (intento $i)..."
                        curl -s http://127.0.0.1:8000 && echo "✅ API lista." && exit 0
                        sleep 2
                    done
                    echo "❌ Timeout esperando a la API."
                    exit 1
                '''
            }
        }

        stage('Ejecutar pruebas con HTML report') {  // Correr test y generar archivo HTML bonito
            steps {
                sh './venv/bin/pytest tests/test_extra.py --html=report.html --self-contained-html || true'
            }
        }

        stage('Publicar reporte HTML') {  // Mostrar ese HTML en la UI de Jenkins
            steps {
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: true,
                    keepAll: true,
                    reportDir: '.',  // El HTML está en la raíz del workspace
                    reportFiles: 'report.html',
                    reportName: 'Reporte de Pruebas HTML'
                ])
            }
        }
    }

    post {
        success {
            echo '✅ Pruebas completadas y reporte HTML generado.'
        }
        failure {
            echo '❌ Fallaron las pruebas. Revisa el reporte HTML.'
        }
    }
}
