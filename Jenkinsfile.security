pipeline {
    agent any

    environment {
        PYTHONUNBUFFERED = '1'
    }

    stages {
        stage('Clonar repo') {
            steps {
                git 'https://github.com/ChristopherPalloArias/JenkinsExample.git'
            }
        }

        stage('Instalar Bandit y dependencias') {
            steps {
                sh '''
                    python3 -m venv venv
                    ./venv/bin/pip install --upgrade pip
                    ./venv/bin/pip install bandit
                '''
            }
        }

        stage('Ejecutar Bandit con SARIF') {
            steps {
                sh '''
                    cd $WORKSPACE
                    ./venv/bin/bandit -r backend/ -f sarif -o bandit-report.sarif || true
                    echo "üìÇ Archivos generados:"
                    ls -lh bandit-report.sarif || echo "‚ùå No se gener√≥ el SARIF"
                '''
            }
        }

        stage('Publicar an√°lisis con Warnings NG') {
            steps {
                recordIssues tools: [sarif(pattern: 'bandit-report.sarif')]
            }
        }
    }

    post {
        success {
            echo '‚úÖ Escaneo de seguridad completado y analizado con Warnings NG.'
        }
        failure {
            echo '‚ùå Fall√≥ el escaneo o an√°lisis de seguridad.'
        }
    }
}
