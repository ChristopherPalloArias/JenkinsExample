pipeline {
    agent any

    environment {
        VENV_DIR = "venv"
    }

    stages {
        stage('Clonar repo') {
            steps {
                git 'https://github.com/ChristopherPalloArias/JenkinsExample.git'
            }
        }

        stage('Instalar Bandit y dependencias') {
            steps {
                sh '''
                    python3 -m venv ${VENV_DIR}
                    . ${VENV_DIR}/bin/activate
                    pip install --upgrade pip
                    pip install bandit
                '''
            }
        }

        stage('Ejecutar an√°lisis de seguridad') {
            steps {
                sh '''
                    . ${VENV_DIR}/bin/activate
                    bandit -r backend/ -f json -o bandit-report.json || true
                '''
            }
        }

        stage('Publicar an√°lisis con Warnings NG') {
            steps {
                // Opci√≥n 1: Usar pyLint parser (recomendado)
                recordIssues(
                    enabledForFailure: true,
                    tools: [pyLint(pattern: 'bandit-report.json')]
                )
                
                // Opci√≥n 2: Alternativa usando formato CSV
                // sh '''
                //     . ${VENV_DIR}/bin/activate
                //     bandit -r backend/ -f csv -o bandit-report.csv || true
                // '''
                // recordIssues(
                //     enabledForFailure: true,
                //     tools: [issues(pattern: 'bandit-report.csv', name: 'Bandit Security Issues')]
                // )
            }
        }

        stage('Archivar resultados') {
            steps {
                // Archivar el reporte para referencia
                archiveArtifacts artifacts: 'bandit-report.json', fingerprint: true
                
                // Publicar el reporte como HTML si es necesario
                publishHTML([
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: '.',
                    reportFiles: 'bandit-report.json',
                    reportName: 'Bandit Security Report'
                ])
            }
        }
    }

    post {
        always {
            echo '‚úÖ Escaneo de seguridad completado.'
            // Limpiar archivos temporales
            sh 'rm -rf ${VENV_DIR}'
        }
        failure {
            echo '‚ùå El pipeline fall√≥. Revisa los logs para m√°s detalles.'
        }
        success {
            echo 'üéâ Pipeline completado exitosamente.'
        }
    }
}