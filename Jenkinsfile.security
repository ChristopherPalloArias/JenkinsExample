pipeline {
    agent any

    environment {
        PYTHONUNBUFFERED = '1'
    }

    stages {
        stage('Clonar repo') {
            steps {
                git 'https://github.com/ChristopherPalloArias/JenkinsExample.git'
            }
        }

        stage('Instalar Bandit y dependencias') {
            steps {
                sh '''
                    python3 -m venv venv
                    ./venv/bin/pip install --upgrade pip
                    ./venv/bin/pip install bandit
                '''
            }
        }

        stage('Ejecutar análisis de seguridad') {
            steps {
                // Bandit escanea en busca de vulnerabilidades y exporta en XML para análisis visual
                sh './venv/bin/bandit -r backend/ -f xml -o bandit-report.xml || true'
            }
        }

        stage('Publicar análisis con Warnings Plugin') {
            steps {
                // Este paso activa la visualización en Jenkins usando el plugin Warnings
                recordIssues tools: [bandit(pattern: 'bandit-report.xml')]
            }
        }
    }

    post {
        success {
            echo '✅ Escaneo de seguridad completado y visualizado.'
        }
        failure {
            echo '❌ Falló el escaneo de seguridad.'
        }
    }
}
