pipeline {
    agent any  // Ejecuta en cualquier agente disponible

    environment {
        PYTHONUNBUFFERED = '1'  // Mejora visibilidad en logs Python
    }

    stages {
        stage('Clonar repo') {  // Descarga tu código desde GitHub
            steps {
                git 'https://github.com/ChristopherPalloArias/JenkinsExample.git'
            }
        }

        stage('Instalar Bandit y dependencias') {  // Prepara entorno virtual e instala Bandit
            steps {
                sh '''
                    python3 -m venv venv
                    ./venv/bin/pip install --upgrade pip
                    ./venv/bin/pip install bandit
                '''
            }
        }

        stage('Ejecutar análisis de seguridad') {  // Escanea recursivamente el código en backend/
            steps {
                sh '''
                    ./venv/bin/bandit backend/vulnerable_sample.py -f html -o bandit-report.html || true
                '''
                // El `|| true` evita que el pipeline falle aunque se encuentren vulnerabilidades
            }
        }

        stage('Publicar reporte de seguridad') {  // Publica el reporte Bandit en formato HTML
            steps {
                publishHTML([
                    reportDir: '.',
                    reportFiles: 'bandit-report.html',
                    reportName: 'Reporte de Seguridad - Bandit',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: false
                ])
            }
        }
    }

    post {
        success {
            echo '✅ Escaneo de seguridad completado y publicado.'
        }
        failure {
            echo '❌ Falló el escaneo de seguridad.'
        }
    }
}
